# This is a basic workflow to help you get started with Actions

name: CI

on:
  # Triggers the workflow on push and pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  JAVA_ENV_VERSION: '21'

jobs:

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setting up Java for running mvn
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.JAVA_ENV_VERSION}}
          distribution: 'adopt'
          cache: 'maven'

      # Building the jpipe.jar artefact
      - name: Create executable jar with Maven
        run: mvn clean package -DskipTests -Dcheckstyle.skip
        
      # Uploading artifact 
      - name: Store Artifact - Library
        uses: actions/upload-artifact@v3
        with:
          name: jpipe-lib.jar
          path: target/jpipe.jar
      # Uploading artifact - Compiler
      - name: Store Artifact - compiler
        uses: actions/upload-artifact@v3
        with:
          name: jpipe-compiler.jar
          path: target/jpipe-jar-with-dependencies.jar

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.JAVA_ENV_VERSION}}
          distribution: 'adopt'
          cache: 'maven'
      # run unit tests
      - name: Unit tests with Maven (surefire)
        run: mvn test

  integration-test:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      # run integration tests (any test ending with IT)
      - name: Integration tests with Maven (failsafe)
        run: mvn verify -Dskip.tests.unit


  linter:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.JAVA_ENV_VERSION}}
          distribution: 'adopt'
          cache: 'maven'
      # run linter
      - name: CheckStyle (Google ruleset)
        run: mvn checkstyle:check